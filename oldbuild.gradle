import groovy.json.JsonSlurper

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '1.6.20'
        compose_version = '1.2.0-rc01'
    }

    repositories {
        mavenLocal()
        //首选国外镜像加快github CI
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
        maven { url 'https://120.25.164.233:8081/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        google { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral { url 'https://maven.aliyun.com/repository/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'
        classpath 'org.codehaus.groovy:groovy-json:3.0.8'
    }
}

allprojects {
    repositories {
        mavenLocal()
        //首选国外镜像加快github CI
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
        maven { url 'https://120.25.164.233:8081/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        google { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral { url 'https://maven.aliyun.com/repository/public' }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += [
                    "-P",
                    "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
            ]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    versions = new JsonSlurper().parse(file('./project-versions.json'))
}
